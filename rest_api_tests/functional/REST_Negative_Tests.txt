*** Settings ***
Library           simple_REST.py
Library           Collections
Resource          rest.txt    # ===============    All enviroments must be delete before these tests

*** Test Cases ***
List environments w/o token
    [Tags]    thread1
    Set Headers    {"Content-Type":"application/json"}
    ${result}    Get List Of Environments    401
    Should Be Empty    ${result}

Create environment w/o token
    [Tags]    thread1
    Set Headers    {"Content-Type":"application/json"}
    Create Environment    ${template}_thread1_1    401
    Get X-Auth-Token    ${ip_keystone}
    ${env_id}    Get Environment ID    ${template}_thread1_1
    Should Be Equal    ${env_id}    None

Update environment w/o token
    [Tags]    thread1
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}_thread1_2    200
    Set body    {"name":"${template}_thread1_2_1"}
    ${env_id}    Get Environment ID    ${template}_thread1_2
    Set Headers    {"Content-Type":"application/json"}
    PUT request    http://${ip}:8082/environments/${env_id}
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    Update Headers    X-Auth-Token    ${token}
    ${env_id}    Get Environment ID    ${template}_thread1_2_1
    Should Be Equal    ${env_id}    None
    ${env_id}    Get Environment ID    ${template}_thread1_2
    Should Not Be Equal    ${env_id}    None
    Delete Environment    ${template}_thread1_2    200

Delete environment w/o token
    [Tags]    thread1
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}_thread1_3    200
    ${env_id}    Get Environment ID    ${template}_thread1_3
    Set Headers    {"Content-Type":"application/json"}
    DELETE request    http://${ip}:8082/environments/${env_id}
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    Update Headers    X-Auth-Token    ${token}
    ${env_id}    Get Environment ID    ${template}_thread1_3
    Should Not Be Equal    ${env_id}    None
    Delete Environment    ${template}_thread1_3    200

Create a session w/o token
    [Tags]    thread1
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}_thread1_4    200
    ${env_id}    Get Environment ID    ${template}_thread1_4
    Set Headers    {"Content-Type":"application/json"}
    POST request wo body    http://${ip}:8082/environments/${env_id}/configure
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    ${resp}    Get Response body
    Should Be Empty    ${resp}
    Update Headers    X-Auth-Token    ${token}
    Delete Environment    ${template}_thread1_4    200

Get session information w/o token
    [Tags]    thread1
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}_thread1_5    200
    ${resp}    Create Session    ${template}_thread1_5    200
    ${session_id}    Set Variable    ${resp['id']}
    ${env_id}    Get Environment ID    ${template}_thread1_5
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    GET request    http://${ip}:8082/environments/${env_id}/sessions/${session_id}
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    ${resp}    Get Response body
    Should Be Empty    ${resp}
    Update Headers    X-Auth-Token    ${token}
    Delete Environment    ${template}_thread1_5    200

Get session report w/o token
    [Tags]    thread1
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}_thread1_6    200
    ${resp}    Create Session    ${template}_thread1_6    200
    ${session_id}    Set Variable    ${resp['id']}
    ${env_id}    Get Environment ID    ${template}_thread1_6
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    GET request    http://${ip}:8082/environments/${env_id}/sessions/${session_id}/reports
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    ${resp}    Get Response body
    Should Be Empty    ${resp}
    Update Headers    X-Auth-Token    ${token}
    Delete Environment    ${template}_thread1_6    200

Delete session w/o token
    [Tags]    thread1
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}_thread1_7    200
    ${resp}    Create Session    ${template}_thread1_7    200
    ${session_id}    Set Variable    ${resp['id']}
    ${env_id}    Get Environment ID    ${template}_thread1_7
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    Delete request    http://${ip}:8082/environments/${env_id}/sessions/${session_id}
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    Update Headers    X-Auth-Token    ${token}
    Delete Environment    ${template}_thread1_7    200

Deploy session of not empty environment w/o token
    [Tags]    thread1
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}_thread1_8
    Check Environment    ${template}_thread1_8    ready
    ${resp}    Create Session    ${template}_thread1_8
    ${session_id}    Set Variable    ${resp['id']}
    ${resp}    Get session information    ${template}_thread1_8    ${session_id}
    Should Be Equal    ${resp['state']}    open
    Create service    ${template}_thread1_8    AD    AD_1
    ${env_id}    Get Environment ID    ${template}_thread1_8
    Check Environment    ${template}_thread1_8    pending
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    POST request wo body    http://${ip}:8082/environments/${env_id}/sessions/${session_id}/deploy
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    Update Headers    X-Auth-Token    ${token}
    Check Environment    ${template}_thread1_8    pending
    ${resp}    Get session information    ${template}_thread1_8    ${session_id}
    Should Be Equal    ${resp['state']}    open
    ${result}    Get deployments    ${template}_thread1_8
    Should Be Empty    ${result['deployments']}
    Delete Environment    ${template}_thread1_8    200

Create AD w/o token
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_9
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}${env_name}
    ${resp}    Create Session    ${template}${env_name}
    ${session_id}    Set Variable    ${resp['id']}
    ${env_id}    Get Environment ID    ${template}${env_name}
    ${auth}    Set Variable    {"type": "activeDirectory", "name": "AD_0", "adminPassword": "swordfish", "domain": "acme.dc", "units": [{"isMaster": true, "recoveryPassword": "swordfish", "location": "west-dc"}, {"isMaster": false, "recoveryPassword": "swordfish", "location": "west-dc"}]}
    Set Body    ${auth}
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    POST request    http://${ip}:8082/environments/${env_id}/services
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    Update Headers    X-Auth-Token    ${token}
    ${resp}    Get List of    AD    ${template}${env_name}
    Should Be Empty    ${resp}
    Delete Environment    ${template}${env_name}    200

Get List of ADs w/o token
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_10
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}${env_name}
    ${resp}    Create Session    ${template}${env_name}
    ${session_id}    Set Variable    ${resp['id']}
    Create service    ${template}${env_name}    AD    AD_1
    ${env_id}    Get Environment ID    ${template}${env_name}
    GET request    http://${ip}:8082/environments/${env_id}/services
    ${resp}    Get Response body
    Should Contain    AD_1    ${resp[0]['name']}
    Get Headers
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    GET request    http://${ip}:8082/environments/${env_id}/services
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    ${resp}    Get Response body
    Should Be Empty    ${resp}
    Update Headers    X-Auth-Token    ${token}
    GET request    http://${ip}:8082/environments/${env_id}/services
    ${resp}    Get Response body
    Should Contain    AD_1    ${resp[0]['name']}
    Delete Environment    ${template}${env_name}    200

Delete AD w/o token
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_11
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}${env_name}
    ${resp}    Create Session    ${template}${env_name}
    ${session_id}    Set Variable    ${resp['id']}
    Create service    ${template}${env_name}    AD    AD_2
    ${resp}    Get List of    AD    ${template}${env_name}
    Should Be Equal    AD_2    ${resp[0]['name']}
    ${env_id}    Get Environment ID    ${template}${env_name}
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    DELETE request    http://${ip}:8082/environments/${env_id}/services
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    ${resp}    Get Response body
    Should Be Empty    ${resp}
    Update Headers    X-Auth-Token    ${token}
    ${resp}    Get List of    AD    ${template}${env_name}
    Should Be Equal    AD_2    ${resp[0]['name']}
    Delete Environment    ${template}${env_name}    200

Create IIS w/o token
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_12
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}${env_name}
    ${resp}    Create Session    ${template}${env_name}
    ${session_id}    Set Variable    ${resp['id']}
    ${env_id}    Get Environment ID    ${template}${env_name}
    ${auth}    Set Variable    {"type": "webServer", "name": "IIS_0", "adminPassword": "swordfish", "domain": "acme.dc", "units": [{}]}
    Set Body    ${auth}
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    POST request    http://${ip}:8082/environments/${env_id}/services
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    Update Headers    X-Auth-Token    ${token}
    ${resp}    Get List of    IIS    ${template}${env_name}
    Should Be Empty    ${resp}
    Delete Environment    ${template}${env_name}    200

Get List of IISs w/o token
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_13
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}${env_name}
    ${resp}    Create Session    ${template}${env_name}
    ${session_id}    Set Variable    ${resp['id']}
    Create service    ${template}${env_name}    IIS    IIS_1
    ${resp}    Get List of    All Services    ${template}${env_name}
    Should Be Equal    IIS_1    ${resp[0]['name']}
    ${env_id}    Get Environment ID    ${template}${env_name}
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    GET request    http://${ip}:8082/environments/${env_id}/services
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    ${resp}    Get Response body
    Should Be Empty    ${resp}
    Update Headers    X-Auth-Token    ${token}
    ${resp}    Get List of    IIS    ${template}${env_name}
    Should Be Equal    IIS_1    ${resp[0]['name']}
    Delete Environment    ${template}${env_name}    200

Delete IIS w/o token
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_14
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}${env_name}
    ${resp}    Create Session    ${template}${env_name}
    ${session_id}    Set Variable    ${resp['id']}
    Create service    ${template}${env_name}    IIS    IIS_2
    ${resp}    Get List of    IIS    ${template}${env_name}
    Should Be Equal    IIS_2    ${resp[0]['name']}
    ${env_id}    Get Environment ID    ${template}${env_name}
    Get Headers
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    DELETE request    http://${ip}:8082/environments/${env_id}/services
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    ${resp}    Get Response body
    Should Be Empty    ${resp}
    Update Headers    X-Auth-Token    ${token}
    ${resp}    Get List of    IIS    ${template}${env_name}
    Should Be Equal    IIS_2    ${resp[0]['name']}
    Delete Environment    ${template}${env_name}    200

Create ASP.Net w/o token
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_15
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}${env_name}
    ${resp}    Create Session    ${template}${env_name}
    ${session_id}    Set Variable    ${resp['id']}
    ${env_id}    Get Environment ID    ${template}${env_name}
    ${auth}    Set Variable    {"type": "aspNetApp", "name": "ASP_0", "credentials": {"username": "Administrator","password": "swordfish"}, "domain": "acme.dc", "adminPassword": "swordfish", "units":[{}], "repository": "git://github.com/Mirantis/murano-mvc-demo.git"}
    Set Body    ${auth}
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    POST request    http://${ip}:8082/environments/${env_id}/services
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    Update Headers    X-Auth-Token    ${token}
    ${resp}    Get List of    ASP    ${template}${env_name}
    Should Be Empty    ${resp}
    Delete Environment    ${template}${env_name}    200

Get List of ASP.Nets w/o token
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_16
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}${env_name}
    ${resp}    Create Session    ${template}${env_name}
    ${session_id}    Set Variable    ${resp['id']}
    Create service    ${template}${env_name}    ASP    ASP_1
    ${resp}    Get List of    ASP    ${template}${env_name}
    Should Be Equal    ASP_1    ${resp[0]['name']}
    ${env_id}    Get Environment ID    ${template}${env_name}
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    GET request    http://${ip}:8082/environments/${env_id}/services
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    ${resp}    Get Response body
    Should Be Empty    ${resp}
    Update Headers    X-Auth-Token    ${token}
    ${resp}    Get List of    ASP    ${template}${env_name}
    Should Be Equal    ASP_1    ${resp[0]['name']}
    Delete Environment    ${template}${env_name}    200

Delete ASP.Net w/o token
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_17
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}${env_name}
    ${resp}    Create Session    ${template}${env_name}
    ${session_id}    Set Variable    ${resp['id']}
    Create service    ${template}${env_name}    ASP    ASP_2
    ${resp}    Get List of    ASP    ${template}${env_name}
    Should Be Equal    ASP_2    ${resp[0]['name']}
    ${env_id}    Get Environment ID    ${template}${env_name}
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    DELETE request    http://${ip}:8082/environments/${env_id}/services
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    ${resp}    Get Response body
    Should Be Empty    ${resp}
    Update Headers    X-Auth-Token    ${token}
    ${resp}    Get List of    ASP    ${template}${env_name}
    Should Be Equal    ASP_2    ${resp[0]['name']}
    Delete Environment    ${template}${env_name}    200

Create IIS Farm w/o token
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_18
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}${env_name}
    ${resp}    Create Session    ${template}${env_name}
    ${session_id}    Set Variable    ${resp['id']}
    ${env_id}    Get Environment ID    ${template}${env_name}
    ${auth}    Set Variable    {"type": "webServerFarm", "name": "IIS_Farm_0", "adminPassword": "swordfish", "domain": "acme.dc", "units": [{}], "loadBalancerPort": "80"}
    Set Body    ${auth}
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    POST request    http://${ip}:8082/environments/${env_id}/services
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    Update Headers    X-Auth-Token    ${token}
    ${resp}    Get List of    IIS Farm    ${template}${env_name}
    Should Be Empty    ${resp}
    Delete Environment    ${template}${env_name}    200

Get List of IIS Farms w/o token
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_19
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}${env_name}
    ${resp}    Create Session    ${template}${env_name}
    ${session_id}    Set Variable    ${resp['id']}
    Create service    ${template}${env_name}    IIS Farm    IIS_Farm_1
    ${resp}    Get List of    IIS Farm    ${template}${env_name}
    Should Be Equal    IIS_Farm_1    ${resp[0]['name']}
    ${env_id}    Get Environment ID    ${template}${env_name}
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    GET request    http://${ip}:8082/environments/${env_id}/services
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    ${resp}    Get Response body
    Should Be Empty    ${resp}
    Update Headers    X-Auth-Token    ${token}
    ${resp}    Get List of    IIS Farm    ${template}${env_name}
    Should Be Equal    IIS_Farm_1    ${resp[0]['name']}
    Delete Environment    ${template}${env_name}    200

Delete IIS Farm w/o token
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_20
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}${env_name}
    ${resp}    Create Session    ${template}${env_name}
    ${session_id}    Set Variable    ${resp['id']}
    Create service    ${template}${env_name}    IIS Farm    IIS_Farm_2
    ${resp}    Get List of    IIS Farm    ${template}${env_name}
    Should Be Equal    IIS_Farm_2    ${resp[0]['name']}
    ${env_id}    Get Environment ID    ${template}${env_name}
    Get Headers
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    DELETE request    http://${ip}:8082/environments/${env_id}/services
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    ${resp}    Get Response body
    Should Be Empty    ${resp}
    Update Headers    X-Auth-Token    ${token}
    ${resp}    Get List of    IIS Farm    ${template}${env_name}
    Should Be Equal    IIS_Farm_2    ${resp[0]['name']}
    Delete Environment    ${template}${env_name}    200

Create ASP.Net Farm w/o token
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_21
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}${env_name}
    ${resp}    Create Session    ${template}${env_name}
    ${session_id}    Set Variable    ${resp['id']}
    ${env_id}    Get Environment ID    ${template}${env_name}
    ${auth}    Set Variable    {"type": "aspNetAppFarm", "name": "ASP_Farm_0", "credentials": {"username": "Administrator","password": "swordfish"}, "domain": "acme.dc", "adminPassword": "swordfish", "units":[{}], "repository": "git://github.com/Mirantis/murano-mvc-demo.git", "loadBalancerPort": "80"}
    Set Body    ${auth}
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    POST request    http://${ip}:8082/environments/${env_id}/services
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    Update Headers    X-Auth-Token    ${token}
    ${resp}    Get List of    ASP Farm    ${template}${env_name}
    Should Be Empty    ${resp}
    Delete Environment    ${template}${env_name}    200

Get List of ASP.Net Farms w/o token
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_22
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}${env_name}
    ${resp}    Create Session    ${template}${env_name}
    ${session_id}    Set Variable    ${resp['id']}
    Create service    ${template}${env_name}    ASP Farm    ASP_Farm_1
    ${resp}    Get List of    ASP Farm    ${template}${env_name}
    Should Be Equal    ASP_Farm_1    ${resp[0]['name']}
    ${env_id}    Get Environment ID    ${template}${env_name}
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    GET request    http://${ip}:8082/environments/${env_id}/services
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    ${resp}    Get Response body
    Should Be Empty    ${resp}
    Update Headers    X-Auth-Token    ${token}
    ${resp}    Get List of    ASP Farm    ${template}${env_name}
    Should Be Equal    ASP_Farm_1    ${resp[0]['name']}
    Delete Environment    ${template}${env_name}    200

Delete ASP.Net Farm w/o token
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_23
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}${env_name}
    ${resp}    Create Session    ${template}${env_name}
    ${session_id}    Set Variable    ${resp['id']}
    Create service    ${template}${env_name}    ASP Farm    ASP_Farm_2
    ${resp}    Get List of    ASP Farm    ${template}${env_name}
    Should Be Equal    ASP_Farm_2    ${resp[0]['name']}
    ${env_id}    Get Environment ID    ${template}${env_name}
    Get Headers
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    DELETE request    http://${ip}:8082/environments/${env_id}/services
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    ${resp}    Get Response body
    Should Be Empty    ${resp}
    Update Headers    X-Auth-Token    ${token}
    ${resp}    Get List of    ASP Farm    ${template}${env_name}
    Should Be Equal    ASP_Farm_2    ${resp[0]['name']}
    Delete Environment    ${template}${env_name}    200

Update environment w/o env_id and with incorrect env_id ========================
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_24
    Get X-Auth-Token    ${ip_keystone}
    Create Environment    ${template}${env_name}    200
    Set body    {"name":"${template}${env_name}_1"}
    PUT request    http://${ip}:8082/environments
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    404    ${resp_code}
    Set body    {"name":"${template}${env_name}_1"}
    PUT request    http://${ip}:8082/environments/aboie785r6awi84asevi7ryzcth7it5
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    404    ${resp_code}
    Set body    {"name":"${template}${env_name}_1"}
    PUT request    http://${ip}:8082/environments/${template}${env_name}
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    404    ${resp_code}
    ${env_id}    Get Environment ID    ${template}${env_name}_1
    Should Be Equal    ${env_id}    None
    ${env_id}    Get Environment ID    ${template}${env_name}
    Should Not Be Equal    ${env_id}    None
    Delete Environment    ${template}${env_name}    200

Delete environment w/o env_id and with incorrect env_id
    [Tags]    thread1
    ${env_name}    Set Variable    _thread1_25
    Get X-Auth-Token    ${ip_keystone}
    Create Environment    ${template}${env_name}    200
    DELETE request    http://${ip}:8082/environments/
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    404    ${resp_code}
    DELETE request    http://${ip}:8082/environments/98tw89esh85yjzop7thi8ax38otyzdp
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    404    ${resp_code}
    DELETE request    http://${ip}:8082/environments/${template}${env_name}
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    404    ${resp_code}
    ${env_id}    Get Environment ID    ${template}${env_name}
    Should Not Be Equal    ${env_id}    None
    Delete Environment    ${template}${env_name}    200

Create a session w/o env_id and with incorrect env_id
    ${env_name}    Set Variable    _thread1_26
    Get X-Auth-Token    ${ip_keystone}
    Create Environment    ${template}${env_name}    200
    ${env_id}    Get Environment ID    ${template}${env_name}
    POST request wo body    http://${ip}:8082/environments/configure
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    404    ${resp_code}
    POST request wo body    http://${ip}:8082/environments/djkfghasekjyrtwev8ytno8aeyaeip/configure
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    404    ${resp_code}
    POST request wo body    http://${ip}:8082/environments/${template}${env_name}/configure
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    404    ${resp_code}
    Delete Environment    ${template}${env_name}    200

Get session information w/o env_id
    [Tags]    thread1
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}_thread1_5    200
    ${resp}    Create Session    ${template}_thread1_5    200
    ${session_id}    Set Variable    ${resp['id']}
    ${env_id}    Get Environment ID    ${template}_thread1_5
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    GET request    http://${ip}:8082/environments/${env_id}/sessions/${session_id}
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    ${resp}    Get Response body
    Should Be Empty    ${resp}
    Update Headers    X-Auth-Token    ${token}
    Delete Environment    ${template}_thread1_5    200

Get session report w/o env_id
    [Tags]    thread1
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}_thread1_6    200
    ${resp}    Create Session    ${template}_thread1_6    200
    ${session_id}    Set Variable    ${resp['id']}
    ${env_id}    Get Environment ID    ${template}_thread1_6
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    GET request    http://${ip}:8082/environments/${env_id}/sessions/${session_id}/reports
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    ${resp}    Get Response body
    Should Be Empty    ${resp}
    Update Headers    X-Auth-Token    ${token}
    Delete Environment    ${template}_thread1_6    200

Delete session w/o env_id
    [Tags]    thread1
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}_thread1_7    200
    ${resp}    Create Session    ${template}_thread1_7    200
    ${session_id}    Set Variable    ${resp['id']}
    ${env_id}    Get Environment ID    ${template}_thread1_7
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    Delete request    http://${ip}:8082/environments/${env_id}/sessions/${session_id}
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    Update Headers    X-Auth-Token    ${token}
    Delete Environment    ${template}_thread1_7    200

Deploy session of not empty environment w/o env_id
    [Tags]    thread1
    Get X-Auth-Token    ${ip_keystone}
    ${resp}    Get Headers
    ${token}    Set Variable    ${resp['X-Auth-Token']}
    Create Environment    ${template}_thread1_8
    Check Environment    ${template}_thread1_8    ready
    ${resp}    Create Session    ${template}_thread1_8
    ${session_id}    Set Variable    ${resp['id']}
    ${resp}    Get session information    ${template}_thread1_8    ${session_id}
    Should Be Equal    ${resp['state']}    open
    Create service    ${template}_thread1_8    AD    AD_1
    ${env_id}    Get Environment ID    ${template}_thread1_8
    Check Environment    ${template}_thread1_8    pending
    Set Headers    {"Content-Type":"application/json"}
    Update Headers    X-Configuration-Session    ${session_id}
    POST request wo body    http://${ip}:8082/environments/${env_id}/sessions/${session_id}/deploy
    ${resp_code}    Get Response Code
    Should Be Equal As Integers    401    ${resp_code}
    Update Headers    X-Auth-Token    ${token}
    Check Environment    ${template}_thread1_8    pending
    ${resp}    Get session information    ${template}_thread1_8    ${session_id}
    Should Be Equal    ${resp['state']}    open
    ${result}    Get deployments    ${template}_thread1_8
    Should Be Empty    ${result['deployments']}
    Delete Environment    ${template}_thread1_8    200
